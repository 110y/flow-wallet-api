package configs

import (
	"log"

	"github.com/caarlos0/env/v6"
	"github.com/joho/godotenv"
	"github.com/onflow/flow-go-sdk"
)

type Config struct {
	// -- Feature flags --
	// Booleans default to false
	DisableRawTransactions   bool `env:"DISABLE_RAWTX"`
	DisableFungibleTokens    bool `env:"DISABLE_FT"`
	DisableNonFungibleTokens bool `env:"DISABLE_NFT"`
	DisableChainEvents       bool `env:"DISABLE_CHAIN_EVENTS"`

	// -- Admin account --
	AdminAddress    string `env:"ADMIN_ADDRESS,notEmpty"`
	AdminKeyIndex   int    `env:"ADMIN_KEY_INDEX" envDefault:"0"`
	AdminKeyType    string `env:"ADMIN_KEY_TYPE" envDefault:"local"`
	AdminPrivateKey string `env:"ADMIN_PRIVATE_KEY,notEmpty"`
	// This sets the number of proposal keys to be used on the admin account.
	// You can increase transaction throughput by using multiple proposal keys for
	// parallel transaction execution.
	AdminProposalKeyCount uint16 `env:"ADMIN_PROPOSAL_KEY_COUNT" envDefault:"1"`

	// -- Keys --
	// When "DefaultKeyType" is set to "local", private keys are generated by the API
	// and stored as encrypted text in the database.
	DefaultKeyType  string `env:"DEFAULT_KEY_TYPE" envDefault:"local"`
	DefaultKeyIndex int    `env:"DEFAULT_KEY_INDEX" envDefault:"0"`
	// If the default of "-1" is used for "DefaultKeyWeight"
	// the service will use flow.AccountKeyWeightThreshold from the Flow SDK.
	DefaultKeyWeight int    `env:"DEFAULT_KEY_WEIGHT" envDefault:"-1"`
	DefaultSignAlgo  string `env:"DEFAULT_SIGN_ALGO" envDefault:"ECDSA_P256"`
	DefaultHashAlgo  string `env:"DEFAULT_HASH_ALGO" envDefault:"SHA3_256"`
	// This symmetrical key is used to encrypt private keys
	// that are stored in the database.
	// It needs to be exactly 32 bytes long.
	EncryptionKey string `env:"ENCRYPTION_KEY,notEmpty"`

	// -- Database --
	DatabaseDSN  string `env:"DATABASE_DSN" envDefault:"wallet.db"`
	DatabaseType string `env:"DATABASE_TYPE" envDefault:"sqlite"`

	// -- Host and chain access --
	Host          string       `env:"HOST"`
	Port          int          `env:"PORT" envDefault:"3000"`
	AccessAPIHost string       `env:"ACCESS_API_HOST,notEmpty"`
	ChainID       flow.ChainID `env:"CHAIN_ID" envDefault:"flow-emulator"`

	// -- Templates --
	EnabledTokens []string `env:"ENABLED_TOKENS" envSeparator:","`

	// -- Workerpool --
	// Defines the maximum number of active jobs that can be queued before
	// new jobs are rejected.
	WorkerQueueCapacity uint `env:"WORKER_QUEUE_CAPACITY" envDefault:"1000"`
	// Number of concurrent workers handling incoming jobs.
	// You can increase the number of workers if you're sending
	// too many transactions and find that the queue is often backlogged.
	WorkerCount uint `env:"WORKER_COUNT" envDefault:"100"`
}

type Options struct {
	EnvFilePath string
}

// ParseConfig parses environment variables and flags to a valid Config.
func ParseConfig(opt *Options) (*Config, error) {
	if opt != nil && opt.EnvFilePath != "" {
		// Load variables from a file to the environment of the process
		if err := godotenv.Load(opt.EnvFilePath); err != nil {
			log.Printf("Could not load environment variables from file.\n%s\nIf running inside a docker container this can be ignored.\n\n", err)
		}
	}

	cfg := Config{}
	if err := env.Parse(&cfg); err != nil {
		return nil, err
	}

	return &cfg, nil
}
